name: 6.1.57（Oneplus Ace 3 V ）
on:
  workflow_dispatch:
    inputs:
      KERNEL_SUFFIX:
        description: '内核名称修改(可改中文和emoji)'
        required: false
        default: ' '
      KERNEL_TIME:
       description: "内核构建日期更改(默认为原厂)"
       required: true
       default: 'Tue Dec 17 23:36:49 UTC 2024'
      enable_feature_x:
       description: "是否启用kpm"
       required: false
       default: false
       type: boolean
      enable_feature_y:
       description: "是否启用lz4kd"
       required: false
       default: false
       type: boolean
       


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_DIR: /home/runner/.ccache  
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "Futaba"
         git config --global user.email "3199167602@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update
          # 防止 snap firefox 升级失败
          sudo apt-mark hold firefox
          sudo apt upgrade -y
          sudo apt install -y python3 git curl ccache

      - name: Restore ccache
        uses: actions/cache@v3
        with:
          path: /home/runner/.ccache
          key: ccache-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

     
      - name: Initialize repo and sync
        run: |
           git clone --depth=1 --branch=oneplus/sm7675_u_14.0.1_oneplus_ace3v \
            https://github.com/OnePlusOSS/android_kernel_oneplus_sm7675.git \
            kernel_workspace
            
      - name: Set up SukiSU
        run: |
         cd kernel_workspace
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
      
        
      - name: Set up susfs
        run: |
          cd kernel_workspace

          # 克隆补丁仓库
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/ShirkNeko/SukiSU_patch.git

          # 复制补丁文件
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./
          cp susfs4ksu/kernel_patches/fs/* ./fs/
          cp susfs4ksu/kernel_patches/include/linux/* ./include/linux/

          # lz4k
          cp -r SukiSU_patch/other/zram/lz4k/include/linux/* ./include/linux/
          cp -r SukiSU_patch/other/zram/lz4k/lib/* ./lib/
          cp -r SukiSU_patch/other/zram/lz4k/crypto/* ./crypto/
          cp -r SukiSU_patch/other/zram/lz4k_oplus ./lib/

          # 打补丁
          sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-android14-6.1.patch
          sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-android14-6.1.patch
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          cp SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          echo "完成"
      
      - name: Apply HMBird GKI patch
        run: |
          cd kernel_workspace/drivers
          cat << 'EOF' > hmbird_patch.c
          #include <linux/init.h>
          #include <linux/module.h>
          #include <linux/of.h>
          #include <linux/slab.h>
          #include <linux/string.h>

          static int __init hmbird_patch_init(void)
          {
              struct device_node *ver_np;
              const char *type;
              int ret;

              ver_np = of_find_node_by_path("/soc/oplus,hmbird/version_type");
              if (!ver_np) {
                   pr_info("hmbird_patch: version_type node not found\n");
                   return 0;
              }

              ret = of_property_read_string(ver_np, "type", &type);
              if (ret) {
                   pr_info("hmbird_patch: type property not found\n");
                   of_node_put(ver_np);
                   return 0;
              }

              if (strcmp(type, "HMBIRD_OGKI")) {
                   of_node_put(ver_np);
                   return 0;
              }

              struct property *prop = of_find_property(ver_np, "type", NULL);
              if (prop) {
                   struct property *new_prop = kmalloc(sizeof(*prop), GFP_KERNEL);
                   if (!new_prop) {
                        pr_info("hmbird_patch: kmalloc for new_prop failed\n");
                        of_node_put(ver_np);
                        return 0;
                   }
                   memcpy(new_prop, prop, sizeof(*prop));
                   new_prop->value = kmalloc(strlen("HMBIRD_GKI") + 1, GFP_KERNEL);
                   if (!new_prop->value) {
                        pr_info("hmbird_patch: kmalloc for new_prop->value failed\n");
                        kfree(new_prop);
                        of_node_put(ver_np);
                        return 0;
                   }
                   strcpy(new_prop->value, "HMBIRD_GKI");
                   new_prop->length = strlen("HMBIRD_GKI") + 1;

                   if (of_remove_property(ver_np, prop) != 0) {
                        pr_info("hmbird_patch: of_remove_property failed\n");
                        return 0;
                   }
                   if (of_add_property(ver_np, new_prop) !=0) {
                        pr_info("hmbird_patch: of_add_property failed\n");
                        return 0;
                   }
                   pr_info("hmbird_patch: success from HMBIRD_OGKI to HMBIRD_GKI\n");
              } else {
                  pr_info("hmbird_patch: type property structure not found\n");
              }
              of_node_put(ver_np);
              return 0;
          }
          early_initcall(hmbird_patch_init);
          MODULE_LICENSE("GPL");
          MODULE_AUTHOR("reigadegr");
          MODULE_DESCRIPTION("Forcefully convert HMBIRD_OGKI to HMBIRD_GKI.");
          EOF

          # 添加到编译目标
          if ! grep -q "hmbird_patch.o" Makefile; then
            echo "obj-y += hmbird_patch.o" >> Makefile
          fi

 
      - name: Apply lz4kd Patches
        if: ${{inputs.enable_feature_y }}
        run: |
          cd kernel_workspace
          # 注意仓库里可能根本不存在 6.1/lz4kd.patch
          if [ -f ../SukiSU_patch/other/zram/zram_patch/6.1/lz4kd.patch ]; then
            cp ../SukiSU_patch/other/zram/zram_patch/6.1/lz4kd.patch ./
            patch -p1 -F 3 < lz4kd.patch || true
          else
            echo "lz4kd.patch not found, skip"
          fi
           
      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace
          defcfg=arch/arm64/configs/vendor/audi_defconfig
          # 如果仓库没有 vendor 目录，就退回到 arch/arm64/configs/defconfig
          [ -f "$defcfg" ] || defcfg=arch/arm64/configs/defconfig

          # KernelSU + SusFS
          echo "CONFIG_KSU=y"                  >> "$defcfg"
          echo "CONFIG_KSU_SUSFS=y"            >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y"   >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y"  >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y"  >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y">> "$defcfg"
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> "$defcfg"
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> "$defcfg"
          echo "CONFIG_CRYPTO_LZ4HC=y" >> "$defcfg"
          echo "CONFIG_CRYPTO_LZ4K=y"  >> "$defcfg"
          echo "CONFIG_LOCALVERSION_AUTO=n" >> "$defcfg"

      - name: Add KPM Configuration Settings
        if: ${{ inputs.enable_feature_x }}
        run: |
          cd kernel_workspace
          defcfg=arch/arm64/configs/vendor/audi_defconfig
          [ -f "$defcfg" ] || defcfg=arch/arm64/configs/defconfig
          echo "CONFIG_KPM=y" >> "$defcfg"

      - name: Add make name
        run: |
          cd kernel_workspace
          sed -i 's/${scm_version}//' scripts/setlocalversion
          sed -i "s/-4k/${{ github.event.inputs.KERNEL_SUFFIX }}/g" \
              arch/arm64/configs/vendor/audi_defconfig \
              || sed -i "s/-4k/${{ github.event.inputs.KERNEL_SUFFIX }}/g" \
                 arch/arm64/configs/defconfig

      - name: Build Kernel
        run: |
          export KBUILD_BUILD_TIMESTAMP="${{ github.event.inputs.KERNEL_TIME }}"
          sudo apt-get install -y libelf-dev llvm lld bc bison flex libssl-dev
          cd kernel_workspace
          # 使用通用 gki 配置，跳过 oplus_cpu
          make O=out vendor/sm7675_gki_defconfig
          make -j$(nproc) O=out \
               ARCH=arm64 \
               LLVM=1 \
               CC=clang \
               CROSS_COMPILE=aarch64-linux-gnu- \
               LD=ld.lld \
               HOSTLD=ld.lld \
               all

      - name: Apply Linux Patch
        run: |
          cd kernel_workspace/out/arch/arm64/boot
          curl -fsL https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux -o patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image

      - name: Make AnyKernel3
        run: |
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3.git
          rm -rf AnyKernel3/.git AnyKernel3/push.sh
          cp kernel_workspace/out/arch/arm64/boot/Image AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AK3_${{ github.event.inputs.KERNEL_SUFFIX }}_${{ env.KSUVER }}_OnePlus_Ace3V
          path: AnyKernel3/*
